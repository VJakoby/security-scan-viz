import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Vulnerability } from '@/types/vulnerability';
import { cn } from '@/lib/utils';

interface VulnerabilityTableProps {
  title: string;
  vulnerabilities: Vulnerability[];
  severity: Vulnerability['severity'];
}

const severityColors = {
  Critical: 'bg-severity-critical text-white',
  High: 'bg-severity-high text-white',
  Medium: 'bg-severity-medium text-white',
  Low: 'bg-severity-low text-white',
  Unknown: 'bg-muted text-muted-foreground'
};

export const VulnerabilityTable = ({ title, vulnerabilities, severity }: VulnerabilityTableProps) => {
  return (
    <Card className="bg-gradient-card shadow-card">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Badge className={cn(severityColors[severity], "px-3 py-1")}>
            {severity}
          </Badge>
          {title}
          <span className="text-sm font-normal text-muted-foreground">
            ({vulnerabilities.length})
          </span>
        </CardTitle>
      </CardHeader>
      <CardContent>
        {vulnerabilities.length === 0 ? (
          <div className="text-center py-8 text-muted-foreground">
            <p>No {severity.toLowerCase()} vulnerabilities found</p>
          </div>
        ) : (
          <div className="overflow-hidden rounded-lg border">
            <Table>
              <TableHeader>
                <TableRow className="bg-muted/50">
                  <TableHead className="font-semibold">ID</TableHead>
                  <TableHead className="font-semibold">Title</TableHead>
                  <TableHead className="font-semibold">Asset</TableHead>
                  <TableHead className="font-semibold">IP Address</TableHead>
                  <TableHead className="font-semibold">Score</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {vulnerabilities.map((vuln, index) => (
                  <TableRow 
                    key={`${vuln.id}-${index}`}
                    className="hover:bg-muted/20 transition-colors"
                  >
                    <TableCell className="font-mono text-sm">{vuln.id}</TableCell>
                    <TableCell className="max-w-xs truncate" title={vuln.title}>
                      {vuln.title}
                    </TableCell>
                    <TableCell className="font-medium">{vuln.asset}</TableCell>
                    <TableCell className="font-mono text-xs text-muted-foreground">{vuln.ipAddress}</TableCell>
                    <TableCell>
                      <Badge variant="outline" className="font-mono">
                        {vuln.score.toFixed(1)}
                      </Badge>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </div>
        )}
      </CardContent>
    </Card>
  );
};